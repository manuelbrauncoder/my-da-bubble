name: üöÄ Deploy Angular Client App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v4

      - name: üß∞ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üõ†Ô∏è Build Angular app
        # This command now creates static files in 'dist/<project-name>/browser'
        run: npm run build

      # --- KOMPLETT NEUER SCHRITT ---
      - name: üìÅ Prepare Nginx production build (Docker context)
        run: |
          # 1. Finde den Namen des Build-Ordners (z.B. "angular-base")
          PROJECT_NAME=$(ls dist | head -n 1)

          # 2. Erstelle einen neuen Ordner f√ºr unser Nginx-Image
          mkdir -p dist/nginx-build

          # 3. Kopiere die gebauten statischen Dateien in den neuen Ordner
          cp -r dist/$PROJECT_NAME/browser/* dist/nginx-build

          # 4. Erstelle eine Nginx-Konfigurationsdatei f√ºr Angular (wichtig f√ºr Routing!)
          cat <<EOF > dist/nginx-build/nginx.conf
          server {
            listen 80;
            location / {
              root /usr/share/nginx/html;
              index index.html index.htm;
              try_files \$uri \$uri/ /index.html;
            }
          }
          EOF

          # 5. Erstelle ein Dockerfile f√ºr den Nginx-Server
          cat <<EOF > dist/nginx-build/Dockerfile
          FROM nginx:alpine
          COPY . /usr/share/nginx/html
          COPY nginx.conf /etc/nginx/conf.d/default.conf
          EXPOSE 80
          CMD ["nginx", "-g", "daemon off;"]
          EOF

      - name: üîë Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # --- ANGEPASSTER SCHRITT ---
      - name: üî® Build and push Docker image to GHCR
        uses: docker/build-push-action@v5
        with:
          # Der Kontext zeigt jetzt auf unseren neuen Nginx-Build-Ordner
          context: ./dist/nginx-build
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

      # --- ANGEPASSTER SCHRITT ---
      - name: üîÅ Restart Docker on Server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Gehe in das zentrale Verzeichnis, wo die docker-compose.yml liegt
            cd ~/srv/server-config

            # Pull das neueste Image aus der GHCR
            docker pull ghcr.io/${{ github.repository }}:latest

            # Starte den korrekten Service "da-bubble" neu
            docker compose up -d da-bubble --force-recreate
